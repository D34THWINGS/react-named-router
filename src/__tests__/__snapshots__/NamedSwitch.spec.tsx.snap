// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NamedSwitch should render only first matching route 1`] = `
<NamedSwitch>
  <Route>
    <NamedRoute
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/foo/bar",
          "url": "/foo/bar",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/foo/bar",
          "search": "",
          "state": undefined,
        }
      }
      name="bar"
    >
      <Route
        computedMatch={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/foo/bar",
            "url": "/foo/bar",
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/foo/bar",
            "search": "",
            "state": undefined,
          }
        }
        name="bar"
        parents={Array []}
        path="/foo/bar"
        regex={/\\^\\\\/foo\\\\/bar\\\\/\\?\\$/}
      />
    </NamedRoute>
  </Route>
</NamedSwitch>
`;

exports[`NamedSwitch should render wildcard route if none matched 1`] = `
<NamedSwitch>
  <Route>
    <Route
      computedMatch={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/foo/bar",
          "search": "",
          "state": undefined,
        }
      }
      render={[Function]}
    >
      Not found
    </Route>
  </Route>
</NamedSwitch>
`;

exports[`NamedSwitch should spread matching route properties 1`] = `
<NamedSwitch>
  <Route>
    <NamedRoute
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/foo/bar",
          "url": "/foo/bar",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/foo/bar",
          "search": "",
          "state": undefined,
        }
      }
      name="bar"
    >
      <Route
        component={[Function]}
        computedMatch={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/foo/bar",
            "url": "/foo/bar",
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/foo/bar",
            "search": "",
            "state": undefined,
          }
        }
        name="bar"
        parents={Array []}
        path="/foo/bar"
        regex={/\\^\\\\/foo\\\\/bar\\\\/\\?\\$/}
      >
        <BarComponent
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/foo/bar",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/foo/bar",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/foo/bar",
              "url": "/foo/bar",
            }
          }
          staticContext={Object {}}
        >
          <div>
            Bar
          </div>
        </BarComponent>
      </Route>
    </NamedRoute>
  </Route>
</NamedSwitch>
`;
